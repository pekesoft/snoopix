#!/bin/bash

#----------------------------------------------------------------------
# Script for Wordpress setup and deployment.
#----------------------------------------------------------------------
# Copyright © 2018 by Peke Soft, Ltd. JAN-2018.
#----------------------------------------------------------------------

# First of all, we need to load the Snoopix framework
. /srv/snoopix/lib/snoopix-framework

# Global Nginx configuration files.
# Basado en el código de http://www.digitalvalley.com/blog/configurar-nginx-para-varios-tipos-de-instalacion-de-wordpress/
CreateNginxFiles () {

  # TODO comprobar existencia directorio.
  mkdir /etc/nginx/wordpress

  # Global setup file for Nginx WordPress services
  cat > /etc/nginx/wordpress/common.conf << EOF
    # ESSENTIAL : Default file to serve. If the first file isn't found.
    index index.php index.html index.htm;

    # ESSENTIAL : no favicon logs
    location = /favicon.ico {
      log_not_found off;
      access_log off;
    }

    # ESSENTIAL : robots.txt
    location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
    }

    # ESSENTIAL : Configure 404 Pages
    error_page 404 /404.html;

    # ESSENTIAL : Configure 50x Pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root /usr/share/nginx/www;
    }

    # SECURITY : Deny all attempts to access hidden files .abcde
    location ~ /\. {
      deny all;
    }

    # PERFORMANCE : Set expires headers for static files and turn off logging.
    location ~* ^.+\.(js|css|swf|xml|txt|ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
      access_log off; log_not_found off; expires 30d;
    }
EOF

  # Fichero de configuración específico de Wordpress
  cat > /etc/nginx/wordpress/wordpress.conf << EOF
    # WORDPRESS : Rewrite rules, sends everything through index.php and keeps the appended query string intact
    location / {
      try_files $uri $uri/ /index.php?q=$uri&$args;
    }

    # SECURITY : Deny all attempts to access PHP Files in the uploads directory
    location ~* /(?:uploads|files)/.*\.php$ {
      deny all;
    }

    # REQUIREMENTS : Enable PHP Support
    location ~ \.php$ {
      # SECURITY : Zero day Exploit Protection
      try_files $uri =404;

      # ENABLE : Enable PHP, listen fpm sock
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
      fastcgi_pass unix:/var/run/php5-fpm.sock;
      fastcgi_index index.php;
      include fastcgi_params;
    }

    # PLUGINS : Enable Rewrite Rules for Yoast SEO SiteMap
    rewrite ^/sitemap_index\.xml$ /index.php?sitemap=1 last;
    rewrite ^/([^/]+?)-sitemap([0-9]+)?\.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;

    # Yeah! you did it. ;)
EOF

  # Fichero para la configuración de un Wordpress multisite.
  cat > /etc/nginx/wordpress/multisite.conf << EOF
    # Rewrite rules for WordPress Multi-site.
    if (!-e $request_filename) {
      rewrite /wp-admin$ $scheme://$host$uri/ permanent;
      rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) $1 last;
      rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ $1 last;
    }
EOF

}

# Procedimiento para crear un servicio web para WordPress
CreateWordpressService () {

    #TODO Seleccionar puerto dinámicamente para el uso con Varnish y otros sistemas.
    Port=80

    #TODO Permitir seleccionar al usuario si es el servidor por defecto.
    DefaultServer=" default_server"

    # Global configuration file.
    # ESSENTIAL : Configure Nginx Listening Port
    listen $Port$DefaultServer;
}

# Procedimiento para instalar Wordpress.
InstallWordpress () {

}
